// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
}

model Batch {
  id       Int       @id @default(autoincrement())
  name     String
  students Student[]
  papers   Paper[]
}

model Student {
  id           Int           @id @default(autoincrement())
  studentId    String        @unique
  universityId Int
  batchId      Int
  name         String
  university   University    @relation(fields: [universityId], references: [id])
  batch        Batch         @relation(fields: [batchId], references: [id])
  quizAttemps  QuizAttempt[]
}

model University {
  id       Int       @id @default(autoincrement())
  name     String
  students Student[]
}

model Paper {
  id          Int           @id @default(autoincrement())
  batchId     Int
  name        String
  duration    Int
  isActive    Boolean       @default(false)
  password    String
  metadata    String
  batch       Batch         @relation(fields: [batchId], references: [id])
  questions   Question[]
  quizAttemps QuizAttempt[]
  createdAt   DateTime      @default(now())
}

model Question {
  id      Int    @id @default(autoincrement())
  paperId Int
  type    String
  marks   Int
  content String
  paper   Paper  @relation(fields: [paperId], references: [id])
}

model QuizAttempt {
  id          Int      @id @default(autoincrement())
  studentId   Int
  paperId     Int
  attemptUuid String   @unique
  finalMarks  Int
  isProcessed Boolean  @default(false)
  createdAt   DateTime @default(now())
  student     Student  @relation(fields: [studentId], references: [id])
  paper       Paper    @relation(fields: [paperId], references: [id])
}
